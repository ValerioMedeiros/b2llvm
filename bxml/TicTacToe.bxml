<Machine name='TicTacToe' type='abstraction'>
<Sets>
<Set>
<Identifier value='Player'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='Player' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Enumerated_Values>
<Identifier value='blue'>
<Attributes>
<TypeInfo>
<Identifier value='Player' />
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='red'>
<Attributes>
<TypeInfo>
<Identifier value='Player' />
</TypeInfo>
</Attributes>
</Identifier>
</Enumerated_Values>
</Set>
<Set>
<Identifier value='Result'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='Result' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Enumerated_Values>
<Identifier value='blue_win'>
<Attributes>
<TypeInfo>
<Identifier value='Result' />
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='red_win'>
<Attributes>
<TypeInfo>
<Identifier value='Result' />
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='draw'>
<Attributes>
<TypeInfo>
<Identifier value='Result' />
</TypeInfo>
</Attributes>
</Identifier>
</Enumerated_Values>
</Set>
</Sets>
<Abstract_Constants>
<Identifier value='WinnerRows'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='ThreeInRow'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
<Identifier value='BOOL' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Abstract_Constants>
<Abstract_Variables>
<Identifier value='bposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='rposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='turn'>
<Attributes>
<TypeInfo>
<Identifier value='Player' />
</TypeInfo>
</Attributes>
</Identifier>
</Abstract_Variables>
<Properties>
<Nary_Predicate operator='&amp;'>
<Expression_Comparison operator='&lt;:'>
<Identifier value='WinnerRows'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Unary_Expression operator='POW'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='8'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Unary_Expression>
</Expression_Comparison>
<Expression_Comparison operator='='>
<Identifier value='WinnerRows'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Unary_Expression operator='{'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
<Binary_Expression operator=','>
<Unary_Expression operator='{'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Binary_Expression operator=','>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Binary_Expression operator=','>
<Integer_Literal value='1'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='2'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Binary_Expression>
</Unary_Expression>
<Binary_Expression operator=','>
<Unary_Expression operator='{'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Binary_Expression operator=','>
<Integer_Literal value='3'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Binary_Expression operator=','>
<Integer_Literal value='4'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='5'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Binary_Expression>
</Unary_Expression>
<Binary_Expression operator=','>
<Unary_Expression operator='{'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Binary_Expression operator=','>
<Integer_Literal value='6'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Binary_Expression operator=','>
<Integer_Literal value='7'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='8'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Binary_Expression>
</Unary_Expression>
<Binary_Expression operator=','>
<Unary_Expression operator='{'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Binary_Expression operator=','>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Binary_Expression operator=','>
<Integer_Literal value='3'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='6'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Binary_Expression>
</Unary_Expression>
<Binary_Expression operator=','>
<Unary_Expression operator='{'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Binary_Expression operator=','>
<Integer_Literal value='1'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Binary_Expression operator=','>
<Integer_Literal value='4'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='7'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Binary_Expression>
</Unary_Expression>
<Binary_Expression operator=','>
<Unary_Expression operator='{'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Binary_Expression operator=','>
<Integer_Literal value='2'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Binary_Expression operator=','>
<Integer_Literal value='5'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='8'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Binary_Expression>
</Unary_Expression>
<Binary_Expression operator=','>
<Unary_Expression operator='{'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Binary_Expression operator=','>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Binary_Expression operator=','>
<Integer_Literal value='4'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='8'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Binary_Expression>
</Unary_Expression>
<Unary_Expression operator='{'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Binary_Expression operator=','>
<Integer_Literal value='6'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Binary_Expression operator=','>
<Integer_Literal value='4'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='2'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Binary_Expression>
</Unary_Expression>
</Binary_Expression>
</Binary_Expression>
</Binary_Expression>
</Binary_Expression>
</Binary_Expression>
</Binary_Expression>
</Binary_Expression>
</Unary_Expression>
</Expression_Comparison>
<Expression_Comparison operator=':'>
<Identifier value='ThreeInRow'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
<Identifier value='BOOL' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='--&gt;'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
<Identifier value='BOOL' />
</Binary_Expression>
</Unary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
<Unary_Expression operator='POW'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='8'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Unary_Expression>
<Identifier value='BOOL'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='BOOL' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Binary_Expression>
</Expression_Comparison>
<Expression_Comparison operator='='>
<Identifier value='ThreeInRow'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
<Identifier value='BOOL' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='\/'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
<Identifier value='BOOL' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
<Quantified_Expression type='%'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
<Identifier value='BOOL' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
<Variables>
<Identifier value='ps'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Predicate>
<Nary_Predicate operator='&amp;'>
<Expression_Comparison operator=':'>
<Identifier value='ps'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Unary_Expression operator='POW'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='8'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Unary_Expression>
</Expression_Comparison>
<Quantified_Predicate type='#'>
<Variables>
<Identifier value='wn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Body>
<Nary_Predicate operator='&amp;'>
<Expression_Comparison operator=':'>
<Identifier value='wn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='WinnerRows'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Expression_Comparison>
<Expression_Comparison operator='&lt;:'>
<Identifier value='wn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='ps'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Expression_Comparison>
</Nary_Predicate>
</Body>
</Quantified_Predicate>
</Nary_Predicate>
</Predicate>
<Body>
<Boolean_Literal value='TRUE'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Boolean_Literal>
</Body>
</Quantified_Expression>
<Quantified_Expression type='%'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
<Identifier value='BOOL' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
<Variables>
<Identifier value='ps'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Predicate>
<Nary_Predicate operator='&amp;'>
<Expression_Comparison operator=':'>
<Identifier value='ps'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Unary_Expression operator='POW'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='8'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Unary_Expression>
</Expression_Comparison>
<Unary_Predicate operator='not'>
<Quantified_Predicate type='#'>
<Variables>
<Identifier value='wn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Body>
<Nary_Predicate operator='&amp;'>
<Expression_Comparison operator=':'>
<Identifier value='wn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='WinnerRows'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Expression_Comparison>
<Expression_Comparison operator='&lt;:'>
<Identifier value='wn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='ps'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Expression_Comparison>
</Nary_Predicate>
</Body>
</Quantified_Predicate>
</Unary_Predicate>
</Nary_Predicate>
</Predicate>
<Body>
<Boolean_Literal value='FALSE'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Boolean_Literal>
</Body>
</Quantified_Expression>
</Binary_Expression>
</Expression_Comparison>
</Nary_Predicate>
</Properties>
<Invariant>
<Nary_Predicate operator='&amp;'>
<Expression_Comparison operator='&lt;:'>
<Identifier value='bposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='8'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Expression_Comparison>
<Expression_Comparison operator='&lt;:'>
<Identifier value='rposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='8'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Expression_Comparison>
<Expression_Comparison operator='='>
<Binary_Expression operator='/\'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Identifier value='bposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='rposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Binary_Expression>
<EmptySet>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Generic_Type />
</Unary_Expression>
</TypeInfo>
</Attributes>
</EmptySet>
</Expression_Comparison>
<Expression_Comparison operator=':'>
<Identifier value='turn'>
<Attributes>
<TypeInfo>
<Identifier value='Player' />
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='Player'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='Player' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Expression_Comparison>
</Nary_Predicate>
</Invariant>
<Initialisation>
<Nary_Substitution operator='||'>
<Assignement_Substitution>
<Variables>
<Identifier value='bposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Values>
<EmptySet>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Generic_Type />
</Unary_Expression>
</TypeInfo>
</Attributes>
</EmptySet>
</Values>
</Assignement_Substitution>
<Assignement_Substitution>
<Variables>
<Identifier value='rposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Values>
<EmptySet>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Generic_Type />
</Unary_Expression>
</TypeInfo>
</Attributes>
</EmptySet>
</Values>
</Assignement_Substitution>
<Assignement_Substitution>
<Variables>
<Identifier value='turn'>
<Attributes>
<TypeInfo>
<Identifier value='Player' />
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Values>
<Identifier value='blue'>
<Attributes>
<TypeInfo>
<Identifier value='Player' />
</TypeInfo>
</Attributes>
</Identifier>
</Values>
</Assignement_Substitution>
</Nary_Substitution>
</Initialisation>
<Operations>
<Operation name='BlueMove'>
<Input_Parameters>
<Identifier value='pp'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Input_Parameters>
<Precondition>
<Nary_Predicate operator='&amp;'>
<Expression_Comparison operator=':'>
<Identifier value='pp'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='8'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Expression_Comparison>
<Expression_Comparison operator='/:'>
<Identifier value='pp'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='\/'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Identifier value='bposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='rposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Binary_Expression>
</Expression_Comparison>
<Expression_Comparison operator='='>
<Identifier value='turn'>
<Attributes>
<TypeInfo>
<Identifier value='Player' />
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='blue'>
<Attributes>
<TypeInfo>
<Identifier value='Player' />
</TypeInfo>
</Attributes>
</Identifier>
</Expression_Comparison>
<Expression_Comparison operator='='>
<Binary_Expression operator='('>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
<Identifier value='ThreeInRow'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
<Identifier value='BOOL' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='rposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Binary_Expression>
<Boolean_Literal value='FALSE'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Boolean_Literal>
</Expression_Comparison>
</Nary_Predicate>
</Precondition>
<Body>
<Nary_Substitution operator='||'>
<Assignement_Substitution>
<Variables>
<Identifier value='bposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Values>
<Binary_Expression operator='\/'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Identifier value='bposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Unary_Expression operator='{'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Identifier value='pp'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Unary_Expression>
</Binary_Expression>
</Values>
</Assignement_Substitution>
<Assignement_Substitution>
<Variables>
<Identifier value='turn'>
<Attributes>
<TypeInfo>
<Identifier value='Player' />
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Values>
<Identifier value='red'>
<Attributes>
<TypeInfo>
<Identifier value='Player' />
</TypeInfo>
</Attributes>
</Identifier>
</Values>
</Assignement_Substitution>
</Nary_Substitution>
</Body>
</Operation>
<Operation name='RedMove'>
<Input_Parameters>
<Identifier value='pp'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Input_Parameters>
<Precondition>
<Nary_Predicate operator='&amp;'>
<Expression_Comparison operator=':'>
<Identifier value='pp'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='8'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Expression_Comparison>
<Expression_Comparison operator='/:'>
<Identifier value='pp'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='\/'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Identifier value='bposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='rposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Binary_Expression>
</Expression_Comparison>
<Expression_Comparison operator='='>
<Identifier value='turn'>
<Attributes>
<TypeInfo>
<Identifier value='Player' />
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='red'>
<Attributes>
<TypeInfo>
<Identifier value='Player' />
</TypeInfo>
</Attributes>
</Identifier>
</Expression_Comparison>
<Expression_Comparison operator='='>
<Binary_Expression operator='('>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
<Identifier value='ThreeInRow'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
<Identifier value='BOOL' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='bposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Binary_Expression>
<Boolean_Literal value='FALSE'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Boolean_Literal>
</Expression_Comparison>
</Nary_Predicate>
</Precondition>
<Body>
<Nary_Substitution operator='||'>
<Assignement_Substitution>
<Variables>
<Identifier value='rposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Values>
<Binary_Expression operator='\/'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Identifier value='rposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Unary_Expression operator='{'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Identifier value='pp'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Unary_Expression>
</Binary_Expression>
</Values>
</Assignement_Substitution>
<Assignement_Substitution>
<Variables>
<Identifier value='turn'>
<Attributes>
<TypeInfo>
<Identifier value='Player' />
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Values>
<Identifier value='blue'>
<Attributes>
<TypeInfo>
<Identifier value='Player' />
</TypeInfo>
</Attributes>
</Identifier>
</Values>
</Assignement_Substitution>
</Nary_Substitution>
</Body>
</Operation>
<Operation name='GameResult'>
<Output_Parameters>
<Identifier value='result'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Output_Parameters>
<Precondition>
<Binary_Predicate operator='or'>
<Binary_Predicate operator='or'>
<Expression_Comparison operator='='>
<Binary_Expression operator='('>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
<Identifier value='ThreeInRow'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
<Identifier value='BOOL' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='bposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Binary_Expression>
<Boolean_Literal value='TRUE'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Boolean_Literal>
</Expression_Comparison>
<Expression_Comparison operator='='>
<Binary_Expression operator='('>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
<Identifier value='ThreeInRow'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
<Identifier value='BOOL' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='rposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Binary_Expression>
<Boolean_Literal value='TRUE'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Boolean_Literal>
</Expression_Comparison>
</Binary_Predicate>
<Expression_Comparison operator='='>
<Binary_Expression operator='\/'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Identifier value='bposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='rposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Binary_Expression>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='8'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Expression_Comparison>
</Binary_Predicate>
</Precondition>
<Body>
<If_Substitution elseif='no'>
<Condition>
<Expression_Comparison operator='='>
<Binary_Expression operator='('>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
<Identifier value='ThreeInRow'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
<Identifier value='BOOL' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='bposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Binary_Expression>
<Boolean_Literal value='TRUE'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Boolean_Literal>
</Expression_Comparison>
</Condition>
<Then>
<Assignement_Substitution>
<Variables>
<Identifier value='result'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Values>
<Integer_Literal value='1'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Values>
</Assignement_Substitution>
</Then>
<Else>
<If_Substitution elseif='yes'>
<Condition>
<Expression_Comparison operator='='>
<Binary_Expression operator='('>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
<Identifier value='ThreeInRow'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
<Identifier value='BOOL' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='rposn'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Binary_Expression>
<Boolean_Literal value='TRUE'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Boolean_Literal>
</Expression_Comparison>
</Condition>
<Then>
<Assignement_Substitution>
<Variables>
<Identifier value='result'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Values>
<Integer_Literal value='2'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Values>
</Assignement_Substitution>
</Then>
<Else>
<Assignement_Substitution>
<Variables>
<Identifier value='result'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Values>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Values>
</Assignement_Substitution>
</Else>
</If_Substitution>
</Else>
</If_Substitution>
</Body>
</Operation>
</Operations>
</Machine>