<Machine name='Sort' type='abstraction'>
<Abstract_Variables>
<Identifier value='vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='descending_sort'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Identifier>
</Abstract_Variables>
<Invariant>
<Nary_Predicate operator='&amp;'>
<Expression_Comparison operator=':'>
<Identifier value='vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='--&gt;'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='9'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='10'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Binary_Expression>
</Expression_Comparison>
<Quantified_Predicate type='!'>
<Variables>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='jj'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Body>
<Binary_Predicate operator='=&gt;'>
<Nary_Predicate operator='&amp;'>
<Expression_Comparison operator=':'>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='9'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Expression_Comparison>
<Expression_Comparison operator=':'>
<Identifier value='jj'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='9'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Expression_Comparison>
</Nary_Predicate>
<Binary_Predicate operator='=&gt;'>
<Expression_Comparison operator='/='>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='jj'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Expression_Comparison>
<Expression_Comparison operator='/='>
<Binary_Expression operator='('>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
<Identifier value='vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Binary_Expression>
<Binary_Expression operator='('>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
<Identifier value='vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='jj'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Binary_Expression>
</Expression_Comparison>
</Binary_Predicate>
</Binary_Predicate>
</Body>
</Quantified_Predicate>
<Expression_Comparison operator=':'>
<Identifier value='descending_sort'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='BOOL'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='BOOL' />
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Expression_Comparison>
<Binary_Predicate operator='=&gt;'>
<Expression_Comparison operator='='>
<Identifier value='descending_sort'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Identifier>
<Boolean_Literal value='TRUE'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Boolean_Literal>
</Expression_Comparison>
<Quantified_Predicate type='!'>
<Variables>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Body>
<Binary_Predicate operator='=&gt;'>
<Expression_Comparison operator=':'>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='8'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Expression_Comparison>
<Expression_Comparison operator='&gt;'>
<Binary_Expression operator='('>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
<Identifier value='vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Binary_Expression>
<Binary_Expression operator='('>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
<Identifier value='vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='+'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Integer_Literal value='1'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Binary_Expression>
</Expression_Comparison>
</Binary_Predicate>
</Body>
</Quantified_Predicate>
</Binary_Predicate>
</Nary_Predicate>
</Invariant>
<Initialisation>
<Nary_Substitution operator='||'>
<ANY_Substitution>
<Variables>
<Identifier value='vec'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Predicate>
<Nary_Predicate operator='&amp;'>
<Expression_Comparison operator=':'>
<Identifier value='vec'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='--&gt;'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='9'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='10'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Binary_Expression>
</Expression_Comparison>
<Quantified_Predicate type='!'>
<Variables>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='jj'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Body>
<Binary_Predicate operator='=&gt;'>
<Nary_Predicate operator='&amp;'>
<Expression_Comparison operator=':'>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='9'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Expression_Comparison>
<Expression_Comparison operator=':'>
<Identifier value='jj'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='9'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Expression_Comparison>
<Expression_Comparison operator='/='>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='jj'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Expression_Comparison>
</Nary_Predicate>
<Expression_Comparison operator='/='>
<Binary_Expression operator='('>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
<Identifier value='vec'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Binary_Expression>
<Binary_Expression operator='('>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
<Identifier value='vec'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='jj'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Binary_Expression>
</Expression_Comparison>
</Binary_Predicate>
</Body>
</Quantified_Predicate>
<Unary_Predicate operator='not'>
<Quantified_Predicate type='!'>
<Variables>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Body>
<Binary_Predicate operator='=&gt;'>
<Expression_Comparison operator=':'>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='8'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Expression_Comparison>
<Expression_Comparison operator='&gt;'>
<Binary_Expression operator='('>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
<Identifier value='vec'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Binary_Expression>
<Binary_Expression operator='('>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
<Identifier value='vec'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='+'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Integer_Literal value='1'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Binary_Expression>
</Expression_Comparison>
</Binary_Predicate>
</Body>
</Quantified_Predicate>
</Unary_Predicate>
</Nary_Predicate>
</Predicate>
<Then>
<Assignement_Substitution>
<Variables>
<Identifier value='vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Values>
<Identifier value='vec'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Values>
</Assignement_Substitution>
</Then>
</ANY_Substitution>
<Assignement_Substitution>
<Variables>
<Identifier value='descending_sort'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Values>
<Boolean_Literal value='FALSE'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Boolean_Literal>
</Values>
</Assignement_Substitution>
</Nary_Substitution>
</Initialisation>
<Operations>
<Operation name='op_sort'>
<Precondition>
<Expression_Comparison operator='='>
<Identifier value='descending_sort'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Identifier>
<Boolean_Literal value='FALSE'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Boolean_Literal>
</Expression_Comparison>
</Precondition>
<Body>
<ANY_Substitution>
<Variables>
<Identifier value='sorted_vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Predicate>
<Nary_Predicate operator='&amp;'>
<Expression_Comparison operator=':'>
<Identifier value='sorted_vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='--&gt;'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='9'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='10'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Binary_Expression>
</Expression_Comparison>
<Quantified_Predicate type='!'>
<Variables>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Body>
<Binary_Predicate operator='=&gt;'>
<Expression_Comparison operator=':'>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='8'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Expression_Comparison>
<Expression_Comparison operator='&gt;'>
<Binary_Expression operator='('>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
<Identifier value='sorted_vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Binary_Expression>
<Binary_Expression operator='('>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
<Identifier value='sorted_vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='+'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Integer_Literal value='1'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Binary_Expression>
</Expression_Comparison>
</Binary_Predicate>
</Body>
</Quantified_Predicate>
<Expression_Comparison operator='='>
<Unary_Expression operator='ran'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Identifier value='sorted_vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Unary_Expression>
<Unary_Expression operator='ran'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Identifier value='vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Unary_Expression>
</Expression_Comparison>
</Nary_Predicate>
</Predicate>
<Then>
<Nary_Substitution operator='||'>
<Assignement_Substitution>
<Variables>
<Identifier value='vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Values>
<Identifier value='sorted_vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Values>
</Assignement_Substitution>
<Assignement_Substitution>
<Variables>
<Identifier value='descending_sort'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Values>
<Boolean_Literal value='TRUE'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Boolean_Literal>
</Values>
</Assignement_Substitution>
</Nary_Substitution>
</Then>
</ANY_Substitution>
</Body>
</Operation>
<Operation name='ascendingB'>
<Precondition>
<Expression_Comparison operator='='>
<Identifier value='descending_sort'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Identifier>
<Boolean_Literal value='TRUE'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Boolean_Literal>
</Expression_Comparison>
</Precondition>
<Body>
<ANY_Substitution>
<Variables>
<Identifier value='sorted_vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Predicate>
<Nary_Predicate operator='&amp;'>
<Expression_Comparison operator=':'>
<Identifier value='sorted_vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='--&gt;'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='9'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='10'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Binary_Expression>
</Expression_Comparison>
<Quantified_Predicate type='!'>
<Variables>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Body>
<Binary_Predicate operator='=&gt;'>
<Expression_Comparison operator=':'>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='..'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Integer_Literal value='0'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
<Integer_Literal value='8'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Expression_Comparison>
<Expression_Comparison operator='&lt;'>
<Binary_Expression operator='('>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
<Identifier value='sorted_vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
</Binary_Expression>
<Binary_Expression operator='('>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
<Identifier value='sorted_vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
<Binary_Expression operator='+'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
<Identifier value='ii'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Identifier>
<Integer_Literal value='1'>
<Attributes>
<TypeInfo>
<Identifier value='INTEGER' />
</TypeInfo>
</Attributes>
</Integer_Literal>
</Binary_Expression>
</Binary_Expression>
</Expression_Comparison>
</Binary_Predicate>
</Body>
</Quantified_Predicate>
<Expression_Comparison operator='='>
<Unary_Expression operator='ran'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Identifier value='sorted_vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Unary_Expression>
<Unary_Expression operator='ran'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Identifier value='INTEGER' />
</Unary_Expression>
</TypeInfo>
</Attributes>
<Identifier value='vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Unary_Expression>
</Expression_Comparison>
</Nary_Predicate>
</Predicate>
<Then>
<Nary_Substitution operator='||'>
<Assignement_Substitution>
<Variables>
<Identifier value='vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Values>
<Identifier value='sorted_vector'>
<Attributes>
<TypeInfo>
<Unary_Expression operator='POW'>
<Binary_Expression operator='*'>
<Identifier value='INTEGER' />
<Identifier value='INTEGER' />
</Binary_Expression>
</Unary_Expression>
</TypeInfo>
</Attributes>
</Identifier>
</Values>
</Assignement_Substitution>
<Assignement_Substitution>
<Variables>
<Identifier value='descending_sort'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Identifier>
</Variables>
<Values>
<Boolean_Literal value='TRUE'>
<Attributes>
<TypeInfo>
<Identifier value='BOOL' />
</TypeInfo>
</Attributes>
</Boolean_Literal>
</Values>
</Assignement_Substitution>
</Nary_Substitution>
</Then>
</ANY_Substitution>
</Body>
</Operation>
</Operations>
</Machine>