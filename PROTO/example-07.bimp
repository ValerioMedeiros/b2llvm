MACHINE counter
...
END

IMPLEMENTATION counter_i
REFINES counter
CONCRETE_VARIABLES value, error
INVARIANT
    value: INT & error : BOOL & (error = overflow)
INITIALISATION
    value := 0;                 inst0
    error := FALSE              inst1
OPERATIONS
    zero =
    BEGIN                       inst6
        value := 0;             inst0
        error := FALSE          inst1
    END;
    inc =
    IF value < MAXINT           inst4
    THEN                        ifbr0
        value := value + 1      inst2
    ELSE                        ifbr1
        error := TRUE           inst3
    END;
    res <-- get = 
        res := value            inst5
END
IMPLEMENTATION wd_i
REFINES wd
VALUES timeout=50
IMPORTS counter
INITIALISATION
   VAR count IN                        inst11
       count := 0;                     inst7
       WHILE count < timeout DO        inst10
           inc;                        inst8
           count := count+1            inst9
       END
   END
OPERATIONS
   start =
      zero;                            inst12
   tick =
   VAR elapsed, diff IN                inst17
       elapsed <-- get;                inst13
       diff := timeout - elapsed;      inst14
       IF diff > 0                     inst16
       THEN                        ifbr2
           inc                         inst15
       END
   END;
   res <-- expired =
   VAR elapsed, diff IN                inst23
       elapsed <-- get;                inst18
       diff := timeout - elapsed;      inst19
       IF diff < 0                     inst22
       THEN                        ifbr3
           res := TRUE                 inst20
       ELSE                        ifbr4
           res := FALSE                inst21
       END
   END
END
