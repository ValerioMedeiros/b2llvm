;; -*- mode: asm -*-
@.str0 = private constant [14 x i8] c"counter = %i\0A\00", align 1 ; <[14 x i8]*> [#uses=1]
@.str4 = private constant [52 x i8] c"Type 's': start, 't': tick, 'e': expired, 'q': quit\00", align 1 ; <[52 x i8]*> [#uses=1]
@.str5 = private constant [16 x i8] c"Initializing...\00", align 1 ; <[16 x i8]*> [#uses=1]
@.str6 = private unnamed_addr constant [12 x i8] c"output: %i\0A\00", align 1

define void @print_state() nounwind ssp {
entry:
	;;  display value of v1
  ret void
}

declare i32 @printf(i8* nocapture, ...) nounwind

define i32 @main() nounwind ssp {
entry:
  %retval = alloca i32                            ; <i32*> [#uses=2]
  %0 = alloca i32                                 ; <i32*> [#uses=2]
  %e = alloca i1
  %c = alloca i8                                  ; <i8*> [#uses=2]
  %"alloca point" = bitcast i32 0 to i32          ; <i32> [#uses=0]
  %1 = call i32 @puts(i8* getelementptr inbounds ([16 x i8]* @.str5, i64 0, i64 0)) nounwind ; <i32> [#uses=0]
  call void @wd_i$init$(%wd_i$state$* @wd_i$self$) nounwind ssp
  call void @print_state() nounwind ssp
  br label %bb

bb:                                               ; preds = %bb3, %entry
  %2 = call i32 @puts(i8* getelementptr inbounds ([52 x i8]* @.str4, i64 0, i64 0)) nounwind ; <i32> [#uses=0]
  %3 = call i32 @getchar() nounwind               ; <i32> [#uses=1]
  %4 = trunc i32 %3 to i8                         ; <i8> [#uses=1]
  store i8 %4, i8* %c, align 1
  %5 = call i32 @getchar() nounwind	
  %6 = load i8* %c, align 1                       ; <i8> [#uses=1]
  %7 = sext i8 %6 to i32                          ; <i32> [#uses=1]
  switch i32 %7, label %bb5 [
    i32 104, label %bb1         ; 'e': expired
    i32 115, label %bb2         ; 's': step
    i32 116, label %bb3         ; 't': tick
    i32 113, label %bb4		; 'q': quit
  ]

bb1:                                              ; preds = %bb
  call void @wd_i$expired(%wd_i$state$* @wd_i$self$, i1* %e)
  %8 = load i1* %e
  %9 = zext i1 %8 to i32
  %10 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([12 x i8]* @.str6, i32 0, i32 0), i32 %9)
  br label %bb5

bb2:                                              ; preds = %bb
  call void @wd_i$start(%wd_i$state$* @wd_i$self$) nounwind ssp
  br label %bb5

bb3:                                              ; preds = %bb
  call void @wd_i$tick(%wd_i$state$* @wd_i$self$) nounwind ssp
  br label %bb5

bb4:                                              ; preds = %bb
  store i32 0, i32* %0, align 4
  %11 = load i32* %0, align 4                      ; <i32> [#uses=1]
  store i32 %11, i32* %retval, align 4
  br label %return

bb5:                                              ; preds = %bb1, %bb
  call void @print_state() nounwind ssp
  br label %bb

return:                                           ; preds = %bb2
  %retval4 = load i32* %retval                    ; <i32> [#uses=1]
  ret i32 %retval4
}

declare i32 @puts(i8*)

declare i32 @getchar()
