;; -*- mode: asm -*-
%TicTacToe$state$ = type {[ 9 x i32], i1}
%TicTacToe$ref$ = type %TicTacToe$state$*
define void @TicTacToe$init$(%TicTacToe$ref$ %self$) {
entry:
  %0 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %1 = getelementptr [ 9 x i32]* %0, i32 0
  %2 = getelementptr [ 9 x i32]* %1, i32 0, i32 0
  store i32 0, i32* %2
  %3 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %4 = getelementptr [ 9 x i32]* %3, i32 0
  %5 = getelementptr [ 9 x i32]* %4, i32 0, i32 1
  store i32 0, i32* %5
  %6 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %7 = getelementptr [ 9 x i32]* %6, i32 0
  %8 = getelementptr [ 9 x i32]* %7, i32 0, i32 2
  store i32 0, i32* %8
  %9 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %10 = getelementptr [ 9 x i32]* %9, i32 0
  %11 = getelementptr [ 9 x i32]* %10, i32 0, i32 3
  store i32 0, i32* %11
  %12 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %13 = getelementptr [ 9 x i32]* %12, i32 0
  %14 = getelementptr [ 9 x i32]* %13, i32 0, i32 4
  store i32 0, i32* %14
  %15 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %16 = getelementptr [ 9 x i32]* %15, i32 0
  %17 = getelementptr [ 9 x i32]* %16, i32 0, i32 5
  store i32 0, i32* %17
  %18 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %19 = getelementptr [ 9 x i32]* %18, i32 0
  %20 = getelementptr [ 9 x i32]* %19, i32 0, i32 6
  store i32 0, i32* %20
  %21 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %22 = getelementptr [ 9 x i32]* %21, i32 0
  %23 = getelementptr [ 9 x i32]* %22, i32 0, i32 7
  store i32 0, i32* %23
  %24 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %25 = getelementptr [ 9 x i32]* %24, i32 0
  %26 = getelementptr [ 9 x i32]* %25, i32 0, i32 8
  store i32 0, i32* %26
  %27 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 1
  store i1 1, i1* %27
  br label %exit
exit:
  ret void
}
define void @TicTacToe$BlueMove(%TicTacToe$ref$ %self$, i32 %pp) {
entry:
  %0 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %1 = getelementptr [ 9 x i32]* %0, i32 0
  %2 = getelementptr [ 9 x i32]* %1, i32 0, i32 %pp
  store i32 1, i32* %2
  %3 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 1
  store i1 0, i1* %3
  br label %exit
exit:
  ret void
}
define void @TicTacToe$RedMove(%TicTacToe$ref$ %self$, i32 %pp) {
entry:
  %0 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %1 = getelementptr [ 9 x i32]* %0, i32 0
  %2 = getelementptr [ 9 x i32]* %1, i32 0, i32 %pp
  store i32 2, i32* %2
  %3 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 1
  store i1 1, i1* %3
  br label %exit
exit:
  ret void
}
define void @TicTacToe$GameResult(%TicTacToe$ref$ %self$, i32* %result) {
entry:
  %b0 = alloca i32
  %b1 = alloca i32
  %b2 = alloca i32
  %b3 = alloca i32
  %b4 = alloca i32
  %b5 = alloca i32
  %b6 = alloca i32
  %b7 = alloca i32
  %b8 = alloca i32
  %ret = alloca i32
  %0 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %1 = getelementptr [ 9 x i32]* %0, i32 0
  %2 = getelementptr [ 9 x i32]* %1, i32 0, i32 0
  %3 = load i32* %2
  store i32 %3, i32* %b0
  %4 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %5 = getelementptr [ 9 x i32]* %4, i32 0
  %6 = getelementptr [ 9 x i32]* %5, i32 0, i32 1
  %7 = load i32* %6
  store i32 %7, i32* %b1
  %8 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %9 = getelementptr [ 9 x i32]* %8, i32 0
  %10 = getelementptr [ 9 x i32]* %9, i32 0, i32 2
  %11 = load i32* %10
  store i32 %11, i32* %b2
  %12 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %13 = getelementptr [ 9 x i32]* %12, i32 0
  %14 = getelementptr [ 9 x i32]* %13, i32 0, i32 3
  %15 = load i32* %14
  store i32 %15, i32* %b3
  %16 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %17 = getelementptr [ 9 x i32]* %16, i32 0
  %18 = getelementptr [ 9 x i32]* %17, i32 0, i32 4
  %19 = load i32* %18
  store i32 %19, i32* %b4
  %20 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %21 = getelementptr [ 9 x i32]* %20, i32 0
  %22 = getelementptr [ 9 x i32]* %21, i32 0, i32 5
  %23 = load i32* %22
  store i32 %23, i32* %b5
  %24 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %25 = getelementptr [ 9 x i32]* %24, i32 0
  %26 = getelementptr [ 9 x i32]* %25, i32 0, i32 6
  %27 = load i32* %26
  store i32 %27, i32* %b6
  %28 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %29 = getelementptr [ 9 x i32]* %28, i32 0
  %30 = getelementptr [ 9 x i32]* %29, i32 0, i32 7
  %31 = load i32* %30
  store i32 %31, i32* %b7
  %32 = getelementptr %TicTacToe$ref$ %self$, i32 0, i32 0
  %33 = getelementptr [ 9 x i32]* %32, i32 0
  %34 = getelementptr [ 9 x i32]* %33, i32 0, i32 8
  %35 = load i32* %34
  store i32 %35, i32* %b8
  %36 = load i32* %b0
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %label13, label %label9
label13:
  %38 = load i32* %b1
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %label11, label %label9
label11:
  %40 = load i32* %b2
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %label1, label %label9
label9:
  %42 = load i32* %b3
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %label17, label %label8
label17:
  %44 = load i32* %b4
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %label15, label %label8
label15:
  %46 = load i32* %b5
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %label1, label %label8
label8:
  %48 = load i32* %b6
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %label21, label %label7
label21:
  %50 = load i32* %b7
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %label19, label %label7
label19:
  %52 = load i32* %b8
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %label1, label %label7
label7:
  %54 = load i32* %b0
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %label25, label %label6
label25:
  %56 = load i32* %b3
  %57 = icmp eq i32 %56, 1
  br i1 %57, label %label23, label %label6
label23:
  %58 = load i32* %b6
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %label1, label %label6
label6:
  %60 = load i32* %b1
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %label29, label %label5
label29:
  %62 = load i32* %b4
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %label27, label %label5
label27:
  %64 = load i32* %b7
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %label1, label %label5
label5:
  %66 = load i32* %b2
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %label33, label %label4
label33:
  %68 = load i32* %b5
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %label31, label %label4
label31:
  %70 = load i32* %b8
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %label1, label %label4
label4:
  %72 = load i32* %b0
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %label37, label %label3
label37:
  %74 = load i32* %b4
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %label35, label %label3
label35:
  %76 = load i32* %b8
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %label1, label %label3
label3:
  %78 = load i32* %b6
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %label41, label %label2
label41:
  %80 = load i32* %b4
  %81 = icmp eq i32 %80, 1
  br i1 %81, label %label39, label %label2
label39:
  %82 = load i32* %b2
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %label1, label %label2
label1:
  store i32 1, i32* %ret
  %84 = load i32* %ret
  store i32 %84, i32* %result
  br label %label0
label2:
  %85 = load i32* %b0
  %86 = icmp eq i32 %85, 2
  br i1 %86, label %label54, label %label50
label54:
  %87 = load i32* %b1
  %88 = icmp eq i32 %87, 2
  br i1 %88, label %label52, label %label50
label52:
  %89 = load i32* %b2
  %90 = icmp eq i32 %89, 2
  br i1 %90, label %label42, label %label50
label50:
  %91 = load i32* %b3
  %92 = icmp eq i32 %91, 2
  br i1 %92, label %label58, label %label49
label58:
  %93 = load i32* %b4
  %94 = icmp eq i32 %93, 2
  br i1 %94, label %label56, label %label49
label56:
  %95 = load i32* %b5
  %96 = icmp eq i32 %95, 2
  br i1 %96, label %label42, label %label49
label49:
  %97 = load i32* %b6
  %98 = icmp eq i32 %97, 2
  br i1 %98, label %label62, label %label48
label62:
  %99 = load i32* %b7
  %100 = icmp eq i32 %99, 2
  br i1 %100, label %label60, label %label48
label60:
  %101 = load i32* %b8
  %102 = icmp eq i32 %101, 2
  br i1 %102, label %label42, label %label48
label48:
  %103 = load i32* %b0
  %104 = icmp eq i32 %103, 2
  br i1 %104, label %label66, label %label47
label66:
  %105 = load i32* %b3
  %106 = icmp eq i32 %105, 2
  br i1 %106, label %label64, label %label47
label64:
  %107 = load i32* %b6
  %108 = icmp eq i32 %107, 2
  br i1 %108, label %label42, label %label47
label47:
  %109 = load i32* %b1
  %110 = icmp eq i32 %109, 2
  br i1 %110, label %label70, label %label46
label70:
  %111 = load i32* %b4
  %112 = icmp eq i32 %111, 2
  br i1 %112, label %label68, label %label46
label68:
  %113 = load i32* %b7
  %114 = icmp eq i32 %113, 2
  br i1 %114, label %label42, label %label46
label46:
  %115 = load i32* %b2
  %116 = icmp eq i32 %115, 2
  br i1 %116, label %label74, label %label45
label74:
  %117 = load i32* %b5
  %118 = icmp eq i32 %117, 2
  br i1 %118, label %label72, label %label45
label72:
  %119 = load i32* %b8
  %120 = icmp eq i32 %119, 2
  br i1 %120, label %label42, label %label45
label45:
  %121 = load i32* %b0
  %122 = icmp eq i32 %121, 2
  br i1 %122, label %label78, label %label44
label78:
  %123 = load i32* %b4
  %124 = icmp eq i32 %123, 2
  br i1 %124, label %label76, label %label44
label76:
  %125 = load i32* %b8
  %126 = icmp eq i32 %125, 2
  br i1 %126, label %label42, label %label44
label44:
  %127 = load i32* %b6
  %128 = icmp eq i32 %127, 2
  br i1 %128, label %label82, label %label43
label82:
  %129 = load i32* %b4
  %130 = icmp eq i32 %129, 2
  br i1 %130, label %label80, label %label43
label80:
  %131 = load i32* %b2
  %132 = icmp eq i32 %131, 2
  br i1 %132, label %label42, label %label43
label42:
  store i32 2, i32* %ret
  %133 = load i32* %ret
  store i32 %133, i32* %result
  br label %label0
label43:
  store i32 0, i32* %ret
  %134 = load i32* %ret
  store i32 %134, i32* %result
  br label %label0
label0:
  br label %exit
exit:
  ret void
}
